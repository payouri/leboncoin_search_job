{"version":3,"sources":["components/AptList.tsx"],"names":["Paragraph","Typography","timeAgo","time","options","templates","defaultTemplates","prefix","suffix","seconds","minute","minutes","hour","hours","day","days","month","months","year","years","currentTemplates","getTemplate","t","n","replace","Math","abs","round","timer","isNaN","Number","Date","String","getTime","ListItem","props","description","link","title","images","price","date","length","substring","RegExp","md","span","actions","target","rel","href","extra","color","icon","cover","style","display","height","width","lazyLoad","flex","Array","isArray","map","img","maxWidth","maxHeight","objectFit","src","alt","ellipsis","rows","expandable","symbol","marginTop","AptList","textFilter","apartments","loading","gutter","margin","from","v","k","index","key","filter","a","indexOf","defaultProps","perPage","memo"],"mappings":"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","file":"static/js/4.933d5b2e.chunk.js","sourcesContent":["import React, { memo } from 'react'\nimport { Carousel, Card, Row, Col, Tag, Empty, Typography, Space } from 'antd';\nimport { InfoCircleOutlined, ClockCircleOutlined } from '@ant-design/icons';\n\nconst { Paragraph } = Typography;\nexport interface ITimeAgoTemplatesOverride {\n    [key: string]: string\n}\n\nexport interface ITimeAgoOptions {\n    templates?: ITimeAgoTemplatesOverride,\n}\n\ntype ITimeAgoDefaultTemplates = {\n    prefix: \"\",\n    suffix: \"\",\n    seconds: \">1min\",\n    minute: \"1min\",\n    minutes: \"%dmin\",\n    hour: \"1h\",\n    hours: \"%dh\",\n    day: \"1j\",\n    days: \"%dj\",\n    month: \"1m\",\n    months: \"%dm\",\n    year: \"1a\",\n    years: \"%da\"\n}\n\n\nconst timeAgo = function (time: Date | string, options: ITimeAgoOptions = {}): string | undefined {\n\n    const { templates } = options\n\n    const defaultTemplates: ITimeAgoDefaultTemplates = {\n        prefix: \"\",\n        suffix: \"\",\n        seconds: \">1min\",\n        minute: \"1min\",\n        minutes: \"%dmin\",\n        hour: \"1h\",\n        hours: \"%dh\",\n        day: \"1j\",\n        days: \"%dj\",\n        month: \"1m\",\n        months: \"%dm\",\n        year: \"1a\",\n        years: \"%da\"\n    };\n\n    const currentTemplates: any = { ...defaultTemplates, ...templates }\n\n\n    const getTemplate = function (t: string, n: number): string {\n        return currentTemplates[t] && currentTemplates[t].replace(/%d/i, Math.abs(Math.round(n)));\n    };\n\n    const timer = function (time: Date | string): string | undefined {\n\n        if (!time) return;\n        if (!isNaN(Number(time))) time = new Date(time);\n        if (time instanceof Date) time = String(time);\n\n        time = time.replace(/\\.\\d+/, \"\"); // remove milliseconds\n        time = time.replace(/-/, \"/\").replace(/-/, \"/\");\n        time = time.replace(/T/, \" \").replace(/Z/, \" UTC\");\n        time = time.replace(/([\\+\\-]\\d\\d)\\:?(\\d\\d)/, \" $1$2\"); // -04:00 -> -0400\n        time = new Date(time);\n\n        const now = new Date();\n        const seconds = ((now.getTime() - time.getTime()) * .001) >> 0;\n        const minutes = seconds / 60;\n        const hours = minutes / 60;\n        const days = hours / 24;\n        const years = days / 365;\n\n        return currentTemplates.prefix + (\n            (seconds < 45 && getTemplate('seconds', seconds)) ||\n            (seconds < 90 && getTemplate('minute', 1)) ||\n            (minutes < 45 && getTemplate('minutes', minutes)) ||\n            (minutes < 90 && getTemplate('hour', 1)) ||\n            (hours < 24 && getTemplate('hours', hours)) ||\n            (hours < 42 && getTemplate('day', 1)) ||\n            (days < 30 && getTemplate('days', days)) ||\n            (days < 45 && getTemplate('month', 1)) ||\n            (days < 365 && getTemplate('months', days / 30)) ||\n            (years < 1.5 && getTemplate('year', 1)) ||\n            getTemplate('years', years)) + currentTemplates.suffix;\n    };\n    return timer(time);\n}\n\nexport interface IApartment {\n    date: string,\n    price?: number,\n    title: string,\n    description: string,\n    link: string,\n    images?: string[]\n}\n\nexport interface IAptListProps {\n    perPage: number,\n    textFilter?: string,\n    apartments: IApartment[],\n    loading: boolean,\n}\n\nconst ListItem = (props: IApartment) => {\n    let { description, link, title, images, price, date } = props\n    description = description.length >= 200 ? description.substring(0, 200) + '...' : description\n    description = description.replace(new RegExp('\\\\r\\\\n', 'g'), '<br>')\n    return (\n        <Col md={{\n            span: 12\n        }}>\n            <Card\n                actions={[<a target={'_blank'} rel=\"noopener noreferrer\" href={link}>Voir l'annonce</a>]}\n                extra={[<Space><Tag color=\"default\" icon={<ClockCircleOutlined />}>{`${timeAgo(date)}`}</Tag><Tag color=\"green\" icon={<InfoCircleOutlined />}>{`${price}â‚¬`}</Tag></Space>]}\n                title={title}\n                cover={\n                    <div style={{ display: 'block', height: '20rem', width: '100%' }}>\n                        <Carousel\n                            // autoplay\n                            lazyLoad='progressive'\n                            style={{\n                                flex: '0 0 100%',\n                                height: 'inherit',\n                                width: 'inherit'\n                            }}\n                        >\n                            {Array.isArray(images) ?\n                                images.map(img => (\n                                    <div style={{ height: '100%', width: '100%', maxWidth: '100%', maxHeight: '100%' }}>\n                                        <img style={{ objectFit: 'cover', height: '20rem', width: '100%' }} src={img} alt=\"\" />\n                                    </div>\n                                )) :\n                                <Empty />\n                            }\n                        </Carousel>\n                    </div>\n                }\n            >\n                <Paragraph ellipsis={{ rows: 3, expandable: true, symbol: 'more' }} style={{ marginTop: '.25rem' }}>{description}</Paragraph>\n            </Card>\n        </Col>\n    )\n}\n\nconst AptList = (props: IAptListProps) => {\n\n    const { textFilter, apartments, loading } = props\n\n    return (\n        <>\n            <Row gutter={[16, 16]}\n                style={{\n                    //     listStyle: 'none',\n                    //     padding: 0,\n                    margin: 0,\n                }}\n            >\n                {!loading\n                    ? apartments && apartments.filter(a => !textFilter || a.description.indexOf(textFilter) > -1 || a.title.indexOf(textFilter) > -1).map(a => (\n                        <ListItem key={a.link} {...a} />\n                    ))\n                    : Array.from({ length: 6 }, (v, k) => k).map(index => (\n                        <Col md={{\n                            span: 12\n                        }}>\n                            <Card loading={true} key={index} />\n                        </Col>\n                    ))\n                }\n            </Row>\n        </>\n    )\n}\n\nAptList.defaultProps = {\n    perPage: 20,\n    apartments: [],\n    loading: false,\n}\n\nexport default memo(AptList)"],"sourceRoot":""}