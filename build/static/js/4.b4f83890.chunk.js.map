{"version":3,"sources":["components/AptList.tsx"],"names":["Paragraph","Typography","timeAgo","time","options","templates","defaultTemplates","prefix","suffix","seconds","minute","minutes","hour","hours","day","days","month","months","year","years","currentTemplates","getTemplate","t","n","replace","Math","abs","round","timer","isNaN","Number","Date","String","getTime","ListItem","props","description","link","title","images","price","date","owner","md","span","actions","target","rel","href","extra","type","color","icon","cover","style","display","height","width","lazyLoad","flex","Array","isArray","map","img","maxWidth","maxHeight","objectFit","src","alt","ellipsis","rows","expandable","symbol","marginTop","whiteSpace","AptList","textFilter","apartments","loading","perPage","useState","displayedApts","setDisplayedApts","page","setPage","useEffect","allAptsSlice","splice","newApts","trackScrolling","useCallback","scrollingElement","getBoundingClientRect","scrollHeight","scrollTop","length","document","addEventListener","removeEventListener","gutter","margin","from","v","k","index","key","filter","a","indexOf","defaultProps","memo"],"mappings":"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","file":"static/js/4.b4f83890.chunk.js","sourcesContent":["import React, { memo, useEffect, useCallback, useState } from 'react'\nimport { Carousel, Card, Row, Col, Tag, Empty, Typography, Space } from 'antd';\nimport { InfoCircleOutlined, ClockCircleOutlined } from '@ant-design/icons';\n\nconst { Paragraph } = Typography;\nexport interface ITimeAgoTemplatesOverride {\n    [key: string]: string\n}\n\nexport interface ITimeAgoOptions {\n    templates?: ITimeAgoTemplatesOverride,\n}\n\ntype ITimeAgoDefaultTemplates = {\n    prefix: \"\",\n    suffix: \"\",\n    seconds: \">1min\",\n    minute: \"1min\",\n    minutes: \"%dmin\",\n    hour: \"1h\",\n    hours: \"%dh\",\n    day: \"1j\",\n    days: \"%dj\",\n    month: \"1m\",\n    months: \"%dm\",\n    year: \"1a\",\n    years: \"%da\"\n}\n\n\nconst timeAgo = function (time: Date | string, options: ITimeAgoOptions = {}): string | undefined {\n\n    const { templates } = options\n\n    const defaultTemplates: ITimeAgoDefaultTemplates = {\n        prefix: \"\",\n        suffix: \"\",\n        seconds: \">1min\",\n        minute: \"1min\",\n        minutes: \"%dmin\",\n        hour: \"1h\",\n        hours: \"%dh\",\n        day: \"1j\",\n        days: \"%dj\",\n        month: \"1m\",\n        months: \"%dm\",\n        year: \"1a\",\n        years: \"%da\"\n    };\n\n    const currentTemplates: any = { ...defaultTemplates, ...templates }\n\n\n    const getTemplate = function (t: string, n: number): string {\n        return currentTemplates[t] && currentTemplates[t].replace(/%d/i, Math.abs(Math.round(n)));\n    };\n\n    const timer = function (time: Date | string): string | undefined {\n\n        if (!time) return;\n        if (!isNaN(Number(time))) time = new Date(time);\n        if (time instanceof Date) time = String(time);\n\n        time = time.replace(/\\.\\d+/, \"\"); // remove milliseconds\n        time = time.replace(/-/, \"/\").replace(/-/, \"/\");\n        time = time.replace(/T/, \" \").replace(/Z/, \" UTC\");\n        time = time.replace(/([\\+\\-]\\d\\d)\\:?(\\d\\d)/, \" $1$2\"); // -04:00 -> -0400\n        time = new Date(time);\n\n        const now = new Date();\n        const seconds = ((now.getTime() - time.getTime()) * .001) >> 0;\n        const minutes = seconds / 60;\n        const hours = minutes / 60;\n        const days = hours / 24;\n        const years = days / 365;\n\n        return currentTemplates.prefix + (\n            (seconds < 45 && getTemplate('seconds', seconds)) ||\n            (seconds < 90 && getTemplate('minute', 1)) ||\n            (minutes < 45 && getTemplate('minutes', minutes)) ||\n            (minutes < 90 && getTemplate('hour', 1)) ||\n            (hours < 24 && getTemplate('hours', hours)) ||\n            (hours < 42 && getTemplate('day', 1)) ||\n            (days < 30 && getTemplate('days', days)) ||\n            (days < 45 && getTemplate('month', 1)) ||\n            (days < 365 && getTemplate('months', days / 30)) ||\n            (years < 1.5 && getTemplate('year', 1)) ||\n            getTemplate('years', years)) + currentTemplates.suffix;\n    };\n    return timer(time);\n}\n\nexport interface IApartment {\n    date: string,\n    price?: number,\n    title: string,\n    description: string,\n    link: string,\n    images?: string[],\n    owner: {\n        type: \"private\" | \"pro\"\n    }\n}\n\nexport interface IAptListProps {\n    perPage: number,\n    textFilter?: string,\n    apartments: IApartment[],\n    loading: boolean,\n}\n\nconst ownerTag = ({ type }: IApartment['owner']) => type === 'private' ? <Tag color=\"purple\">Particulier</Tag> : <Tag color=\"red\">Agence</Tag>\n\nconst ListItem = (props: IApartment) => {\n    let { description, link, title, images, price, date, owner } = props\n    // description = description.replace(new RegExp('\\\\n', 'g'), '<br />')\n    return (\n        <Col md={{\n            span: 12\n        }}>\n            <Card\n                actions={[<a target={'_blank'} rel=\"noopener noreferrer\" href={link}>Voir l'annonce</a>]}\n                extra={[<Space>{ownerTag(owner)}<Tag color=\"default\" icon={<ClockCircleOutlined />}>{`${timeAgo(date)}`}</Tag><Tag color=\"green\" icon={<InfoCircleOutlined />}>{`${price}â‚¬`}</Tag></Space>]}\n                title={title}\n                cover={\n                    <div style={{ display: 'block', height: '20rem', width: '100%' }}>\n                        <Carousel\n                            // autoplay\n                            lazyLoad='progressive'\n                            style={{\n                                flex: '0 0 100%',\n                                height: 'inherit',\n                                width: 'inherit'\n                            }}\n                        >\n                            {Array.isArray(images) ?\n                                images.map(img => (\n                                    <div style={{ height: '100%', width: '100%', maxWidth: '100%', maxHeight: '100%' }}>\n                                        <img style={{ objectFit: 'cover', height: '20rem', width: '100%' }} src={img} alt=\"\" />\n                                    </div>\n                                )) :\n                                <Empty />\n                            }\n                        </Carousel>\n                    </div>\n                }\n            >\n                <Paragraph ellipsis={{ rows: 3, expandable: true, symbol: 'Plus' }} style={{ marginTop: '.25rem', whiteSpace: 'pre-line' }}>{description}</Paragraph>\n            </Card>\n        </Col>\n    )\n}\n\nconst AptList = (props: IAptListProps) => {\n\n    const { textFilter, apartments, loading, perPage } = props\n    const [displayedApts, setDisplayedApts] = useState<IApartment[]>([])\n    const [page, setPage] = useState<number>(0)\n\n    useEffect(() => {\n        const allAptsSlice = [...apartments].splice(page * perPage, perPage)\n        const newApts = [...displayedApts, ...allAptsSlice]\n        setDisplayedApts(newApts)\n        return () => { }\n    }, [apartments, page, perPage])\n\n    const trackScrolling = useCallback(({ target: { scrollingElement } }) => {\n        const { height } = scrollingElement.getBoundingClientRect()\n        if (scrollingElement.scrollHeight - height - 32 <= scrollingElement.scrollTop && page * perPage < apartments.length) {\n           setPage(page + 1)\n        }\n    }, [])\n    \n    useEffect(() => {\n        document.addEventListener('scroll', trackScrolling);\n        return () => {\n            document.removeEventListener('scroll', trackScrolling)\n        }\n    }, [trackScrolling])\n\n\n\n    return (\n        <Row gutter={[16, 16]}\n            style={{\n                //     listStyle: 'none',\n                //     padding: 0,\n                margin: 0,\n            }}\n        >\n            {!loading\n                ? displayedApts.filter(a => !textFilter || a.description.indexOf(textFilter) > -1 || a.title.indexOf(textFilter) > -1).map(a => (\n                    <ListItem key={a.link} {...a} />\n                ))\n                : Array.from({ length: 6 }, (v, k) => k).map(index => (\n                    <Col md={{\n                        span: 12\n                    }}>\n                        <Card loading={true} key={index} />\n                    </Col>\n                ))\n            }\n        </Row>\n    )\n}\n\nAptList.defaultProps = {\n    textFilter: '',\n    perPage: 20,\n    apartments: [],\n    loading: false,\n}\n\nexport default memo(AptList)"],"sourceRoot":""}